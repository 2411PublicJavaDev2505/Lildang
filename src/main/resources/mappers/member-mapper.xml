<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberMapper">
	<resultMap type="MemberVO" id="rsetToMember">
		<id property="id" column="ID" />
		<result property="pw" column="PW" />
		<result property="name" column="NAME" />
		<result property="email" column="EMAIL" />
		<result property="phone" column="PHONE" />
		<result property="gender" column="GENDER" />
		<result property="address" column="ADDRESS" />
		<result property="age" column="AGE" />
		<result property="birth" column="BIRTH" />
		<result property="outYn" column="OUT_YN" />
		<result property="outDate" column="OUT_DATE" />
		<result property="profileFileName" column="PROFILE_FILE_NAME" />
		<result property="profileFileRename" column="PROFILE_FILE_RENAME" />
		<result property="profileFilePath" column="PROFILE_FILE_PATH" />
		<result property="memberComment" column="MEMBER_COMMENT" />
		<result property="introduction" column="INTRODUCTION" />
		<result property="cvWriteTime" column="CV_WRITE_TIME" />
		<result property="cvUpdateTime" column="CV_UPDATE_TIME" />
		<result property="role" column="ROLE"/>
		<result property="cvYn" column="CV_YN"/>
		<result property="score" column="SCORE"/>
	</resultMap>
	<select id="selectOneByLogin" resultMap="rsetToMember">
		SELECT * FROM MEMBER WHERE ID = #{id} AND PW = #{pw}
	</select>
	<select id="selectOneById" resultMap="rsetToMember">
		SELECT * FROM MEMBER WHERE ID = #{id} 
	</select>
	<insert id="memberRegister">
		INSERT INTO MEMBER(ID, PW, NAME, PHONE, GENDER, EMAIL, BIRTH, ROLE, AGE) 
		VALUES(#{id}, #{pw}, #{name},#{phone},#{gender},#{email},#{birth},#{role}, FLOOR(MONTHS_BETWEEN(SYSDATE,#{birth})/12))
	</insert>
	<update id="updateMember">
		UPDATE MEMBER SET PW=#{pw}, EMAIL=#{email}, ADDRESS=#{address}, PHONE=#{phone} WHERE ID=#{id}
	</update>
	<delete id="deleteMember">
		DELETE FROM MEMBER WHERE ID = #{id}
	</delete>
	<update id="cvInsert">
		UPDATE MEMBER SET PROFILE_FILE_NAME=#{profileFileName}, PROFILE_FILE_RENAME=#{profileFileRename}, PROFILE_FILE_PATH=#{profileFilePath}
		,MEMBER_COMMENT=#{memberComment},INTRODUCTION=#{introduction}
		,CV_WRITE_TIME=SYSTIMESTAMP,CV_UPDATE_TIME=SYSTIMESTAMP, CV_YN='Y' WHERE ID=#{id}
	</update>
	<update id="cvDelete">
		UPDATE MEMBER SET PROFILE_FILE_NAME=NULL, PROFILE_FILE_RENAME=NULL, PROFILE_FILE_PATH=NULL
		,MEMBER_COMMENT=NULL,INTRODUCTION=NULL
		,CV_WRITE_TIME=NULL,CV_UPDATE_TIME=NULL, CV_YN='N' WHERE ID=#{id}
	</update>
	<select id="selectMemberList" resultMap="rsetToMember">
		SELECT * FROM MEMBER WHERE ROLE='EMPLOYEE'
	</select>
	<update id="updateEmployeeScore">
		UPDATE MEMBER SET SCORE=(SELECT ROUND(AVG(REVIEW_SCORE)) FROM REVIEW_MEMBER WHERE EMPLOYEE_ID=#{employeeId}) WHERE ID=#{employeeId}
	</update>
	<select id="selectSearchList" resultMap="rsetToMember">
		SELECT * FROM MEMBER WHERE ADDRESS LIKE '%'||#{searchKeyword}||'%'
	</select>
	<!-- gettotalCount추가페이징처리!에러나면 지워줄것! -->
	<select id="getTotalCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER 
	</select>
	<delete id="reportDeleteE">
		DELETE FROM MEMBER WHERE ID = #{id}
	</delete>
	<select id="selectMemberSearchList" resultMap="rsetToMember">
		SELECT * FROM MEMBER 
		<where>
			<if test="memberSearch == 'name'">
				NAME LIKE '%'||#{searchKeyword}||'%'
			</if>
			<if test="memberSearch == 'id'">
				ID LIKE '%'||#{searchKeyword}||'%'
			</if>
		</where>
	</select>
	<update id="updateProfile">
		UPDATE MEMBER SET PROFILE_FILE_NAME=#{profileFileName}, PROFILE_FILE_RENAME=#{profileFileRename}
		,PROFILE_FILE_PATH=#{profileFilePath} WHERE ID=#{id}
	</update>
	<update id="cvUpdate">
		UPDATE MEMBER SET MEMBER_COMMENT=#{memberComment},INTRODUCTION=#{introduction}
		,CV_UPDATE_TIME=SYSTIMESTAMP, CV_YN='Y' WHERE ID=#{id}
	</update>
</mapper>
